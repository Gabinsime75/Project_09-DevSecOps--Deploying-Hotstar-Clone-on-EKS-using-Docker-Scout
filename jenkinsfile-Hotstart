pipeline {
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }

    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages {
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Gabinsime75/Project_09-DevSecOps--Deploying-Hotstar-Clone-on-EKS-using-Docker-Scout.git'
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server'){
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Hotstar \
                    -Dsonar.projectKey=Hotstart'''
                }
            }
        }

        stage('quality gate') {
            steps {
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Docker Scout FS') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker-scout quickview fs://.'
                        sh 'docker-scout cves fs://.'
                    }
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){
                        sh "docker build -t hotstar3 ."
                        sh "docker tag hotstar gabin75/hotstar3:latest "
                        sh "docker push gabin75/hotstar3:latest"
                    }
                }
            }
        }

        stage('Docker Scout image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker-scout quickview gabin75/hotstar3:latest'
                        sh 'docker-scout cves gabin75/hotstar3:latest'
                        sh 'docker-scout recommendations gabin75/hotstar3:latest'
                    }
                }
            }
        }

        stage('deploy_docker') {
            steps {
                sh "docker run -d --name hotstar3 -p 3002:3002 gabin75/hotstar3:latest"
            }
        }

        stage('Deploy to kubernets') {
            steps {
                script{
                    dir('K8S'){
                        withKubeConfig(caCertificate: '', clusterName: 'EKS_CLOUD', contextName: 'arn:aws:eks:us-east-2:303319466234:cluster/EKS_CLOUD', credentialsId: 'k8s', namespace: 'Default', restrictKubeConfigAccess: false, serverUrl: 'https://E340D202FA3ADA591CDCAA154C56BE7A.gr7.us-east-2.eks.amazonaws.com'){
                            sh 'kubectl apply -f deployment.yml'
                            sh 'kubectl apply -f service.yml'
                        }
                    }
                }
            }
        }
    }
}