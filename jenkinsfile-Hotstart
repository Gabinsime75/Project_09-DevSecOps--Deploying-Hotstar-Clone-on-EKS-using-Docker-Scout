pipeline {
    agent any
    tools{
        jdk 'jdk17'
        nodejs 'node16'
    }

    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages {
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout from Git') {
            steps {
                git branch: 'main', url: 'https://github.com/Gabinsime75/Project_09-DevSecOps--Deploying-Hotstar-Clone-on-EKS-using-Docker-Scout.git'
            }
        }

        stage('Sonarqube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server'){
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Hotstar \
                    -Dsonar.projectKey=Hotstart'''
                }
            }
        }

        stage('quality gate') {
            steps {
                script{
                    waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-token'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

        stage('OWASP FS SCAN') {
            steps {
                dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-Check'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }

        stage('Docker Scout FS') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker-scout quickview fs://.'
                        sh 'docker-scout cves fs://.'
                    }
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){
                        sh "docker build -t hotstar ."
                        sh "docker tag hotstar gabin75/hotstar:latest "
                        sh "docker push gabin75/hotstar:latest"
                    }
                }
            }
        }

        stage('Docker Scout image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker', toolName: 'docker') {
                        sh 'docker-scout quickview gabin75/hotstar:latest'
                        sh 'docker-scout cves gabin75/hotstar:latest'
                        sh 'docker-scout recommendations gabin75/hotstar:latest'
                    }
                }
            }
        }

        stage('deploy_docker') {
            steps {
                sh "docker run -d --name hotstar -p 3000:3000 gabin75/hotstar:latest"
            }
        }
    }
}